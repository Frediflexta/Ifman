{"version":3,"sources":["../../src/services/courseServices.js"],"names":["Course","course","CourseServices","CourseData","create","dataValues","id","findOne","where","CourseDetails","findAll","attribute","name","value","update","returning"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAEA,IAAMA,MAAM,GAAGC,cAAf;AAEA;;;;IAGqBC,c;;;;;;;;;;AACnB;;;;;;;;;oDAM0BC,U;;;;;;;;uBACKH,MAAM,CAACI,MAAP,CAAcD,UAAd,C;;;;AAArBE,gBAAAA,U,QAAAA,U;iDACDA,U;;;;;;;;;;;;;;;;AAIT;;;;;;;;;;;;qDAM2BC,E;;;;;;;uBACGN,MAAM,CAACO,OAAP,CAAe;AAAEC,kBAAAA,KAAK,EAAE;AAAEF,oBAAAA,EAAE,EAAFA;AAAF;AAAT,iBAAf,C;;;AAAtBG,gBAAAA,a;kDACCA,a;;;;;;;;;;;;;;;;AAGT;;;;;;;;;;;;;;;;;;;uBAO8BT,MAAM,CAACU,OAAP,E;;;AAAtBD,gBAAAA,a;kDACCA,a;;;;;;;;;;;;;;;;AAGT;;;;;;;;;;;;;qDAO8BE,S,EAAWL,E;;;;;;AAC/BM,gBAAAA,I,GAAgBD,S,CAAhBC,I,EAAMC,K,GAAUF,S,CAAVE,K;;uBACcb,MAAM,CAACc,MAAP,sCAAiBF,IAAjB,EAAwBC,KAAxB,GAC1B;AAAEL,kBAAAA,KAAK,EAAE;AAAEF,oBAAAA,EAAE,EAAFA;AAAF;AAAT,iBAD0B,EACP;AAAES,kBAAAA,SAAS,EAAE;AAAb,iBADO,C;;;AAAtBN,gBAAAA,a;kDAECA,a","sourcesContent":["import { course } from '../models';\n\nconst Course = course;\n\n/**\n * Course service Class\n */\nexport default class CourseServices {\n  /**\n   * @name CreateCourse\n   * @description Interacts with model to create a new Course\n   * @param { string } CourseData the Course's data\n   * @returns {object} return the updated field\n   */\n  static async createCourse(CourseData) {\n    const { dataValues } = await Course.create(CourseData);\n    return dataValues;\n  }\n\n\n  /**\n   * @name GetCourseById\n   * @description Interacts with model to find a single Course\n   * @param { string } id the Course's id\n   * @returns {object} return the Course's data\n   */\n  static async getCourseById(id) {\n    const CourseDetails = await Course.findOne({ where: { id } });\n    return CourseDetails;\n  }\n\n  /**\n   * @name GetAllCourse\n   * @description Interacts with model to find a single Course\n   * @param { string } id the Course's id\n   * @returns {object} return the Course's data\n   */\n  static async getAllCourse() {\n    const CourseDetails = await Course.findAll();\n    return CourseDetails;\n  }\n\n  /**\n   * @name updateCourseById\n   * @description Interacts with model to find a single Course\n   * @param { object } attribute the Course attribute to update\n   * @param { string } id the Course's id\n   * @returns {object} return the Course's data\n   */\n  static async updateCourseById(attribute, id) {\n    const { name, value } = attribute;\n    const CourseDetails = await Course.update({ [name]: value },\n      { where: { id } }, { returning: true });\n    return CourseDetails;\n  }\n}\n"],"file":"courseServices.js"}