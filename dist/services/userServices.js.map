{"version":3,"sources":["../../src/services/userServices.js"],"names":["UserServices","userData","User","create","dataValues","password","email","findOne","where","data","attribute","id","name","value","update","returning","userDetails","firstName","middleName","lastName","birthDate","Address","gender","phoneNumber","plain","result"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;IAGqBA,Y;;;;;;;;;;AACnB;;;;;;;;;oDAMwBC,Q;;;;;;;;uBACOC,aAAKC,MAAL,CAAYF,QAAZ,C;;;;AAArBG,gBAAAA,U,QAAAA,U;AACR,uBAAOA,UAAU,CAACC,QAAlB,C,CAA4B;;iDACrBD,U;;;;;;;;;;;;;;;;AAGT;;;;;;;;;;;;qDAM4BE,K;;;;;;;uBACPJ,aAAKK,OAAL,CAAa;AAAEC,kBAAAA,KAAK,EAAE;AAAEF,oBAAAA,KAAK,EAALA;AAAF;AAAT,iBAAb,C;;;AAAbG,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;AAGT;;;;;;;;;;;;;qDAO4BC,S,EAAWC,E;;;;;;AAC7BC,gBAAAA,I,GAAgBF,S,CAAhBE,I,EAAMC,K,GAAUH,S,CAAVG,K;;uBACYX,aAAKY,MAAL,sCAAeF,IAAf,EAAsBC,KAAtB,GACxB;AAAEL,kBAAAA,KAAK,EAAE;AAAEG,oBAAAA,EAAE,EAAFA;AAAF;AAAT,iBADwB,EACL;AAAEI,kBAAAA,SAAS,EAAE;AAAb,iBADK,C;;;AAApBC,gBAAAA,W;kDAECA,W;;;;;;;;;;;;;;;;AAGT;;;;;;;;;;;;;qDAOgCN,S,EAAWJ,K;;;;;;AAEvCW,gBAAAA,S,GAEEP,S,CAFFO,S,EAAWC,U,GAETR,S,CAFSQ,U,EAAYC,Q,GAErBT,S,CAFqBS,Q,EAAUC,S,GAE/BV,S,CAF+BU,S,EAAWC,O,GAE1CX,S,CAF0CW,O,EAC5CC,M,GACEZ,S,CADFY,M,EAAQC,W,GACNb,S,CADMa,W;;uBAEgBrB,aAAKY,MAAL,CAAY;AACpCG,kBAAAA,SAAS,EAATA,SADoC;AAEpCC,kBAAAA,UAAU,EAAVA,UAFoC;AAGpCC,kBAAAA,QAAQ,EAARA,QAHoC;AAIpCC,kBAAAA,SAAS,EAATA,SAJoC;AAKpCE,kBAAAA,MAAM,EAANA,MALoC;AAMpCD,kBAAAA,OAAO,EAAPA,OANoC;AAOpCE,kBAAAA,WAAW,EAAXA;AAPoC,iBAAZ,EAS1B;AAAEf,kBAAAA,KAAK,EAAE;AAAEF,oBAAAA,KAAK,EAALA;AAAF,mBAAT;AAAoBS,kBAAAA,SAAS,EAAE,IAA/B;AAAqCS,kBAAAA,KAAK,EAAE;AAA5C,iBAT0B,C;;;AAApBR,gBAAAA,W;AAUAS,gBAAAA,M,GAAST,WAAW,CAAC,CAAD,CAAX,CAAeZ,U;AAC9B,uBAAOqB,MAAM,CAACpB,QAAd;kDACOoB,M","sourcesContent":["import { User } from '../models';\n\n/**\n * User service Class\n */\nexport default class UserServices {\n  /**\n   * @name CreateUser\n   * @description Interacts with model to create a new user\n   * @param { string } userData the user's data\n   * @returns {object} return the updated field\n   */\n  static async createUser(userData) {\n    const { dataValues } = await User.create(userData);\n    delete dataValues.password; // remove sensitive data from returned object\n    return dataValues;\n  }\n\n  /**\n   * @name GetUserByEmail\n   * @description Interacts with model to find a single user\n   * @param { string } email the user's email\n   * @returns {object} return the user's data\n   */\n  static async getUserByEmail(email) {\n    const data = await User.findOne({ where: { email } });\n    return data;\n  }\n\n  /**\n   * @name updateUserById\n   * @description Interacts with model to find a single user\n   * @param { object } attribute the user attribute to update\n   * @param { string } id the user's id\n   * @returns {object} return the user's data\n   */\n  static async updateUserById(attribute, id) {\n    const { name, value } = attribute;\n    const userDetails = await User.update({ [name]: value },\n      { where: { id } }, { returning: true });\n    return userDetails;\n  }\n\n  /**\n  * @name updateUserInfoById\n  * @description Interacts with model to find a single user\n  * @param { object } attribute the user attribute to update\n  * @param { string } email the user's email\n  * @returns {object} return the user's data\n  */\n  static async updateUserInfoById(attribute, email) {\n    const {\n      firstName, middleName, lastName, birthDate, Address,\n      gender, phoneNumber,\n    } = attribute;\n    const userDetails = await User.update({\n      firstName,\n      middleName,\n      lastName,\n      birthDate,\n      gender,\n      Address,\n      phoneNumber,\n    },\n    { where: { email }, returning: true, plain: true });\n    const result = userDetails[1].dataValues;\n    delete result.password;\n    return result;\n  }\n}\n"],"file":"userServices.js"}