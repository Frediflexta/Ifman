{"version":3,"sources":["../../src/models/index.js"],"names":["fs","require","path","Sequelize","env","process","NODE_ENV","basename","__filename","config","db","sequelize","use_env_variable","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMG,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,QAAQ,GAAGL,IAAI,CAACK,QAAL,CAAcC,UAAd,CAAjB;;AACA,IAAMC,MAAM,GAAGR,OAAO,CAAC,oBAAD,CAAP,CAA8BG,GAA9B,CAAf;;AAEA,IAAMM,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIF,MAAM,CAACG,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIR,SAAJ,CAAcE,OAAO,CAACD,GAAR,CAAYK,MAAM,CAACG,gBAAnB,CAAd,EAAoDH,MAApD,CAAZ;AACD,CAFD,MAEO;AACLE,EAAAA,SAAS,GAAG,IAAIR,SAAJ,CAAcM,MAAM,CAACI,QAArB,EAA+BJ,MAAM,CAACK,QAAtC,EAAgDL,MAAM,CAACM,QAAvD,EAAiEN,MAAjE,CAAZ;AACD;;AAEDT,EAAE,CACCgB,WADH,CACeC,SADf,EAEGC,MAFH,CAEU,UAAAC,IAAI;AAAA,SAAKA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKZ,QAAvC,IAAqDY,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA5E;AAAA,CAFd,EAGGC,OAHH,CAGW,UAACH,IAAD,EAAU;AACjB,MAAMI,KAAK,GAAGZ,SAAS,UAAT,CAAiBT,IAAI,CAACsB,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAT,EAAAA,EAAE,CAACa,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CANH;AAQAG,MAAM,CAACC,IAAP,CAAYjB,EAAZ,EAAgBY,OAAhB,CAAwB,UAACM,SAAD,EAAe;AACrC,MAAIlB,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BnB,IAAAA,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAd,CAAwBnB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACP,SAAH,GAAeA,SAAf;AAEA2B,MAAM,CAACC,OAAP,GAAiBrB,EAAjB","sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\nconst Sequelize = require('sequelize');\n\nconst env = process.env.NODE_ENV || 'development';\nconst basename = path.basename(__filename);\nconst config = require('../database/config')[env];\n\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js'))\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"],"file":"index.js"}