{"version":3,"sources":["../../src/middlewares/errorHandler.js"],"names":["ErrorHandler","err","req","res","next","headersSent","status","json","statusCode","error","message"],"mappings":";;;;;;;;;;;;;AAAA;;;;IAIMA,Y;;;;;;;;;;AACN;;;;;;;;;8BASmBC,G,EAAKC,G,EAAKC,G,EAAKC,I,EAAM;AACpC,UAAID,GAAG,CAACE,WAAR,EAAqB;AACnB,eAAOD,IAAI,CAACH,GAAD,CAAX;AACD;;AAED,aAAOE,GAAG,CAACG,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB,EAA8BC,IAA9B,CAAmC;AACxCD,QAAAA,MAAM,EAAEH,GAAG,CAACK,UAD4B;AAExCC,QAAAA,KAAK,EAAER,GAAG,CAACS;AAF6B,OAAnC,CAAP;AAID;;;;;eAGYV,Y","sourcesContent":["/**\n * @exports ErrorHandler\n * @class ErrorHandler\n */\nclass ErrorHandler {\n/**\n * @description Handles  uncaught erros in the app\n * @method sendError\n * @param {object} err\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @returns {(function|object)} Function next() or JSON API response\n */\n  static sendError(err, req, res, next) {\n    if (res.headersSent) {\n      return next(err);\n    }\n\n    return res.status(err.status || 500).json({\n      status: res.statusCode,\n      error: err.message,\n    });\n  }\n}\n\nexport default ErrorHandler;\n"],"file":"errorHandler.js"}